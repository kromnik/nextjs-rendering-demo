"use client";

import { useState, useEffect, useCallback } from "react";
import { getPosts, Post } from "@/lib/api";
import { PostList } from "@/components/posts/PostList";
import { Modal } from "@/components/ui/Modal";
import { usePostsWebSocket } from "@/hooks/use-posts-websocket";
import { usePostsContext } from "@/contexts/posts-context";

export default function CsrPage() {
  // const [query, setQuery] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const [isModalOpen, setIsModalOpen] = useState(false);

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤–º–µ—Å—Ç–æ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const {
    posts,
    setPosts,
    addPost,
    hasLoadedInitialPosts,
    setHasLoadedInitialPosts,
  } = usePostsContext();

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ö—É–∫ WebSocket –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  const { sendPostNotification } = usePostsWebSocket();

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å—Ç—ã —Å API —Ç–æ–ª—å–∫–æ –ü–†–ò –ü–ï–†–í–û–ú –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  const loadInitialPosts = useCallback(async () => {
    // –ï—Å–ª–∏ —É–∂–µ –∑–∞–≥—Ä—É–∂–∞–ª–∏ –ø–æ—Å—Ç—ã - –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ–º —Å–Ω–æ–≤–∞
    if (hasLoadedInitialPosts) {
      return;
    }

    setIsLoading(true);
    try {
      const initialPosts = await getPosts();
      setPosts(initialPosts);
      setHasLoadedInitialPosts(true); // –ü–æ–º–µ—á–∞–µ–º —á—Ç–æ –∑–∞–≥—Ä—É–∑–∏–ª–∏
    } catch (error) {
      console.error("Error loading posts:", error);
    } finally {
      setIsLoading(false);
    }
  }, [hasLoadedInitialPosts, setPosts, setHasLoadedInitialPosts]);

  useEffect(() => {
    loadInitialPosts();
  }, [loadInitialPosts]);

  // –ü–æ–∏—Å–∫ –ø–æ—Å—Ç–æ–≤
  // const handleSearch = async (e: React.FormEvent) => {
  //   e.preventDefault();
  //   setIsLoading(true);
  //   try {
  //     const results = await searchPosts(query, posts);
  //     setPosts(results);
  //   } catch (error) {
  //     console.error("Error searching posts:", error);
  //   } finally {
  //     setIsLoading(false);
  //   }
  // };

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞
  const handlePostCreated = (newPost: Post) => {
    addPost(newPost); // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å—Ç –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ WebSocket (–¥–µ–º–æ)
    sendPostNotification({
      type: "post_created",
      post: {
        id: newPost.id,
        title: newPost.title,
        userId: newPost.userId,
      },
      timestamp: new Date().toISOString(),
    });

    setIsModalOpen(false);
  };

  return (
    <div className="max-w-6xl mx-auto">
      <h2 className="text-3xl font-bold text-center mb-8 text-gray-900">
        Client-Side Rendered (CSR)
      </h2>

      <div className="mb-8 p-6  bg-blue-50 rounded-lg shadow-md border border-blue-200">
        {/* <h3 className="text-xl font-semibold text-center text-blue-800 mb-4">
          –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–º–∏ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –∫–ª–∏–µ–Ω—Ç–∞
        </h3> */}
        <p className="text-blue-700 text-center">
          –ù–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –∫–ª–∏–µ–Ω—Ç–∞ CSR. –í—Å—è
          –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ –ø–æ—Å–ª–µ
          –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–æ –ø–µ—Ä–≤—ã–º–∏ 10 –ø–æ—Å—Ç–∞–º–∏
        </p>

        <div className="flex flex-col sm:flex-row items-center gap-8">
          {/* –ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞ */}
          <button
            onClick={() => setIsModalOpen(true)}
            className="bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-6 rounded-lg transition-colors duration-200 shadow-lg"
          >
            Create New Post
          </button>

          <p className="text-blue-700 text-center">
            üí° –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É WebSocket –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
          </p>

          {/* –ü–æ–∏—Å–∫–æ–≤–∞—è —Ñ–æ—Ä–º–∞ */}
          {/* <form onSubmit={handleSearch} className="flex gap-2 flex-1">
            <input
              type="text"
              value={query}
              onChange={(e) => setQuery(e.target.value)}
              placeholder="Search posts..."
              className="flex-1 px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            />
            <button
              type="submit"
              disabled={isLoading}
              className="px-6 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 disabled:opacity-50"
            >
              Search
            </button>
          </form> */}
        </div>
      </div>

      {isLoading ? (
        <div className="text-center text-gray-500 py-8">Loading posts...</div>
      ) : (
        <PostList
          posts={posts}
          title={`–†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏(${posts.length} –ø–æ—Å—Ç–æ–≤)`}
        />
      )}

      <div className="mt-8 p-4 bg-blue-50 border border-blue-200 rounded-lg">
        <h4 className="font-semibold text-blue-800 mb-2">
          CSR –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:
        </h4>
        <ul className="text-blue-700 text-sm space-y-1">
          <li>‚Ä¢ –ë—ã—Å—Ç—Ä–∞—è –Ω–∞—á–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã </li>
          <li>
            ‚Ä¢ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –ø–æ—Å–ª–µ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ (useEffect)
          </li>
          <li>‚Ä¢ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã</li>
          <li>
            ‚Ä¢ –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø–∞–Ω–µ–ª–µ–π —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–µ–π,
            –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
          </li>
        </ul>
      </div>

      <Modal
        isOpen={isModalOpen}
        onClose={() => setIsModalOpen(false)}
        onPostCreated={handlePostCreated}
      />
    </div>
  );
}
